"""
 В большой текстовой строке подсчитать количество встречаемых слов и вернуть 10 самых частых.
Не учитывать знаки препинания и регистр символов. За основу возьмите любую статью из википедии
или из документации к языку.
"""

text = '''Переменная в языке программирования это название для зарезервированного места в памяти 
компьютера, предназначенное для хранения значений. Это означает, что когда вы создаете переменную, 
вы на самом деле резервируете определенное место в памяти компьютера. Основываясь на типе данных переменной, 
интерпретатор выделяет необходимое количество памяти и решает, что может находится в зарезервированной области памяти. 
Для понимания, можете думать о переменной как о коробке, в которую можно положить любую вещь, но только 
определенного размера. Размер в данном примере будет типом переменной. Это не совсем верное определение, 
но оно дает общее представление о картине в целом.В Python вам не нужно объявлять тип переменной вручную 
(как, например в С++). Объявление происходит автоматически (это называется динамическая типизация), когда 
вы присваиваете значение переменной. Знак равенства ( = ) используется для присвоения значения переменной. 
Операнд по левую сторону от знака равно ( = ) это имя переменной, операнд по правую сторону - значение присвоенное 
этой переменной.'''

# Данный текст
# text = """Переменная в языке программирования это название для зарезервированного места в памяти компьютера, предназначенное для хранения значений. Это означает, что когда вы создаете переменную, вы на самом деле резервируете определенное место в памяти компьютера. Основываясь на типе данных переменной, интерпретатор выделяет необходимое количество памяти и решает, что может находится в зарезервированной области памяти. Для понимания, можете думать о переменной как о коробке, в которую можно п...

# Приведение текста к нижнему регистру
text = text.lower()

# Удаление знаков препинания
cleaned_text = ''
for char in text:
    if char.isalnum() or char.isspace():
        cleaned_text += char

# Разделение текста на слова
words = cleaned_text.split()

# Подсчет частоты встречаемости каждого слова
word_counts = {}
for word in words:
    if word in word_counts:
        word_counts[word] += 1
    else:
        word_counts[word] = 1

# Сортировка слов по частоте и выбор 10 самых частых
top_10_words = sorted(word_counts.items(), key=lambda item: item[1], reverse=True)[:10]

print(top_10_words)

